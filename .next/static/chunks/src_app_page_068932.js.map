{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/%D0%90%D0%BC%D0%B0%D0%BB%D0%B8%D1%8F/my-app/src/app/page.js"],"sourcesContent":["// Добавьте эту директиву в начало вашего файла\n\"use client\"; \n\nimport React, { useState, useEffect } from 'react';\n\nfunction ExternalApiFetch() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://dummyjson.com/users');\n        if (response.ok) {\n          const json = await response.json();\n          setData(json);\n        } else {\n          console.error('Не удалось получить данные');\n          setError('Не удалось получить данные');\n        }\n      } catch (error) {\n        console.error('Ошибка:', error);\n        setError('Произошла ошибка: ' + error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) return <div>Загрузка...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div>\n      <h2>Пользователи</h2>\n      <ul>\n        {data.users.map(user => (\n          <li key={user.id}>{user.firstName} {user.lastName}</li> // Замените на корректные поля из вашего ответа API\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,+CAA+C;;;AAG/C;;;AAFA;;AAIA,SAAS;;IACP,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM;wDAAY;oBAChB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,IAAI,SAAS,EAAE,EAAE;4BACf,MAAM,OAAO,MAAM,SAAS,IAAI;4BAChC,QAAQ;wBACV,OAAO;4BACL,QAAQ,KAAK,CAAC;4BACd,SAAS;wBACX;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,WAAW;wBACzB,SAAS,uBAAuB,MAAM,OAAO;oBAC/C,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;qCAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,6LAAC;kBAAI;;;;;;IACzB,IAAI,OAAO,qBAAO,6LAAC;kBAAK;;;;;;IAExB,qBACE,6LAAC;;0BACC,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAA,qBACd,6LAAC;;4BAAkB,KAAK,SAAS;4BAAC;4BAAE,KAAK,QAAQ;;uBAAxC,KAAK,EAAE;;;;6BAAwC,mDAAmD;;;;;;;;;;;;;AAKrH;GAxCS;KAAA"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}